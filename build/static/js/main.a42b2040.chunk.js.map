{"version":3,"sources":["components/Note.jsx","components/Notification.jsx","components/Footer.jsx","services/notes.js","App.jsx","index.jsx"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"yNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCG3BK,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EAAyB,KAG3B,yBAAKJ,UAAU,SACZI,ICUQC,EAfA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uG,gBCOS,EAfA,WAEb,OADgBC,IAAMC,IAHR,cAICC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCoF9BK,EA9FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGlB,MAAK,SAACmB,GAAD,OAAkBT,EAASS,QAClC,IAEH,IAAMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAACrC,GAAD,OAAUA,EAAKG,aA+B1BmC,EAAqB,SAACjB,GAC1B,IAAMrB,EAAOyB,EAAMc,MAAK,SAACC,GAAD,OAAOA,EAAEnB,KAAOA,KAClCoB,EAAW,eAAQzC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD+B,EACUb,EAAIoB,GACXzB,MAAK,SAAC0B,GACLhB,EAASD,EAAMkB,KAAI,SAACH,GAAD,OAAQA,EAAEnB,KAAOA,EAAKmB,EAAIE,SAE9CE,OAAM,SAACC,GACNb,EAAgB,SAAD,OACJhC,EAAKK,QADD,sCAGfyC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACG,GAAD,OAAOA,EAAEnB,KAAOA,UAI5C,OACE,6BACE,qCAEA,kBAAC,EAAD,CAAcb,QAASuB,IAEvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,OAEG,IACAA,EAAU,YAAc,QAG7B,4BA9DeO,EAAYO,KAAI,SAAC3C,GAAD,OACjC,kBAAC,EAAD,CACE+C,IAAK/C,EAAKqB,GACVrB,KAAMA,EACNC,iBAAkB,kBAAMqC,EAAmBtC,EAAKqB,WA6DhD,0BAAM2B,SArDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,QAASsB,EACTyB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,GAC3BnC,GAAII,EAAMgC,OAAS,GAGrBvB,EACUiB,GACPnC,MAAK,SAACE,GACLQ,EAASD,EAAMiC,OAAOxC,IACtBU,EAAW,SAyCX,2BACE+B,MAAOhC,EACPiC,SA5DiB,SAACX,GACxBrB,EAAWqB,EAAMY,OAAOF,UA6DpB,4BAAQG,KAAK,UAAb,SAGF,kBAAC,EAAD,Q,MC1FNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a42b2040.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important';\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) return null;\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\n\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update };\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important);\n\n  const rows = () => notesToShow.map((note) => (\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  ));\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService\n      .create(noteObject)\n      .then((data) => {\n        setNotes(notes.concat(data));\n        setNewNote('');\n      });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((n) => (n.id !== id ? n : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`,\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show\n          {' '}\n          {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}